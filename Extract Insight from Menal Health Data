{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":84895,"databundleVersionId":10008389,"sourceType":"competition"}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:35.426379Z","iopub.execute_input":"2024-11-06T14:34:35.426930Z","iopub.status.idle":"2024-11-06T14:34:36.934336Z","shell.execute_reply.started":"2024-11-06T14:34:35.426879Z","shell.execute_reply":"2024-11-06T14:34:36.932481Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e11/sample_submission.csv\n/kaggle/input/playground-series-s4e11/train.csv\n/kaggle/input/playground-series-s4e11/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# Roadmap to follow for the competition","metadata":{}},{"cell_type":"markdown","source":"\r\n### 1. **Data Exploration**\r\n   - **Load and Preview Data**: Check the shape, missing values, and basic statistics.\r\n   - **Identify Features**: Since the data is based on a mental health survey, examine both categorical and numerical features that might correlate with depression.\r\n   - **Feature Distribution**: Analyze distributions of potential predictors like age, gender, occupation, lifestyle factors, etc.\r\n\r\n### 2. **Data Preprocessing**\r\n   - **Handle Missing Values**: Use techniques like mean/mode imputation or create an \"Unknown\" category for categorical features.\r\n   - **Encoding Categorical Variables**: Use label encoding for binary features and one-hot encoding for multi-category features.\r\n   - **Feature Scaling**: Apply standardization or normalization for numeric features.\r\n\r\n### 3. **Exploratory Data Analysis (EDA)**\r\n   - **Correlation Analysis**: Use correlation matrices and heatmaps to find relationships between features and the target variable (Depression).\r\n   - **Feature Engineering**: Create new features, if applicable, that could capture underlying patterns (e.g., interaction terms, risk categories).\r\n   - **Visualization**: Use box plots, bar charts, or pair plots to see trends between specific variables and depression.\r\n\r\n### 4. **Model Selection**\r\n   - **Baseline Models**: Start with simple models (Logistic Regression, Decision Trees) to establish a baseline accuracy.\r\n   - **Advanced Models**: Progress to ensemble models like Random Forest, Gradient Boosting, or even XGBoost, which often perform well on tabular data.\r\n   - **Cross-Validation**: Use k-fold cross-validation to test model stability and avoid overfitting.\r\n\r\n### 5. **Hyperparameter Tuning**\r\n   - **Grid Search/Random Search**: Tune parameters for the best-performing models to maximize accuracy.\r\n   - **Optuna or Bayesian Optimization**: For more efficient tuning if time allows.\r\n\r\n### 6. **Evaluation**\r\n   - **Accuracy Score**: Since the competition metric is accuracy, focus on maximizing this score through feature selection, tuning, and ensembling.\r\n   - **Ensemble Techniques**: Consider stacking or blending models to boost accuracy further.\r\n\r\n### 7. **Submission**\r\n   - **Generate Submission File**: Prepare the prediction results in the specified format with columns `id` and `Depression`.\r\n   - **Validate Submission File**: Double-check the format t---ecific code snippets for any step!","metadata":{}},{"cell_type":"markdown","source":"## 1. Import Libraries","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import GridSearchCV\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:36.936193Z","iopub.execute_input":"2024-11-06T14:34:36.936855Z","iopub.status.idle":"2024-11-06T14:34:39.519993Z","shell.execute_reply.started":"2024-11-06T14:34:36.936806Z","shell.execute_reply":"2024-11-06T14:34:39.518447Z"}},"outputs":[],"execution_count":2},{"cell_type":"markdown","source":"### Load and Preview Data:","metadata":{}},{"cell_type":"code","source":"# Load train and test data\ntrain_df = pd.read_csv('/kaggle/input/playground-series-s4e11/train.csv')\ntest_df = pd.read_csv('/kaggle/input/playground-series-s4e11/test.csv')\nsubmission_df = pd.read_csv('/kaggle/input/playground-series-s4e11/sample_submission.csv')\n\n# Display the first few rows of the dataset\ntrain_df.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:39.521830Z","iopub.execute_input":"2024-11-06T14:34:39.522519Z","iopub.status.idle":"2024-11-06T14:34:40.992227Z","shell.execute_reply.started":"2024-11-06T14:34:39.522468Z","shell.execute_reply":"2024-11-06T14:34:40.990719Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   id      Name  Gender   Age           City Working Professional or Student  \\\n0   0  Aaradhya  Female  49.0       Ludhiana            Working Professional   \n1   1     Vivan    Male  26.0       Varanasi            Working Professional   \n2   2    Yuvraj    Male  33.0  Visakhapatnam                         Student   \n3   3    Yuvraj    Male  22.0         Mumbai            Working Professional   \n4   4      Rhea  Female  30.0         Kanpur            Working Professional   \n\n         Profession  Academic Pressure  Work Pressure  CGPA  \\\n0              Chef                NaN            5.0   NaN   \n1           Teacher                NaN            4.0   NaN   \n2               NaN                5.0            NaN  8.97   \n3           Teacher                NaN            5.0   NaN   \n4  Business Analyst                NaN            1.0   NaN   \n\n   Study Satisfaction  Job Satisfaction     Sleep Duration Dietary Habits  \\\n0                 NaN               2.0  More than 8 hours        Healthy   \n1                 NaN               3.0  Less than 5 hours      Unhealthy   \n2                 2.0               NaN          5-6 hours        Healthy   \n3                 NaN               1.0  Less than 5 hours       Moderate   \n4                 NaN               1.0          5-6 hours      Unhealthy   \n\n    Degree Have you ever had suicidal thoughts ?  Work/Study Hours  \\\n0      BHM                                    No               1.0   \n1      LLB                                   Yes               7.0   \n2  B.Pharm                                   Yes               3.0   \n3      BBA                                   Yes              10.0   \n4      BBA                                   Yes               9.0   \n\n   Financial Stress Family History of Mental Illness  Depression  \n0               2.0                               No           0  \n1               3.0                               No           1  \n2               1.0                               No           1  \n3               1.0                              Yes           1  \n4               4.0                              Yes           0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Name</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>City</th>\n      <th>Working Professional or Student</th>\n      <th>Profession</th>\n      <th>Academic Pressure</th>\n      <th>Work Pressure</th>\n      <th>CGPA</th>\n      <th>Study Satisfaction</th>\n      <th>Job Satisfaction</th>\n      <th>Sleep Duration</th>\n      <th>Dietary Habits</th>\n      <th>Degree</th>\n      <th>Have you ever had suicidal thoughts ?</th>\n      <th>Work/Study Hours</th>\n      <th>Financial Stress</th>\n      <th>Family History of Mental Illness</th>\n      <th>Depression</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Aaradhya</td>\n      <td>Female</td>\n      <td>49.0</td>\n      <td>Ludhiana</td>\n      <td>Working Professional</td>\n      <td>Chef</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>More than 8 hours</td>\n      <td>Healthy</td>\n      <td>BHM</td>\n      <td>No</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>No</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Vivan</td>\n      <td>Male</td>\n      <td>26.0</td>\n      <td>Varanasi</td>\n      <td>Working Professional</td>\n      <td>Teacher</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>Less than 5 hours</td>\n      <td>Unhealthy</td>\n      <td>LLB</td>\n      <td>Yes</td>\n      <td>7.0</td>\n      <td>3.0</td>\n      <td>No</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Yuvraj</td>\n      <td>Male</td>\n      <td>33.0</td>\n      <td>Visakhapatnam</td>\n      <td>Student</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>8.97</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>5-6 hours</td>\n      <td>Healthy</td>\n      <td>B.Pharm</td>\n      <td>Yes</td>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>No</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>Yuvraj</td>\n      <td>Male</td>\n      <td>22.0</td>\n      <td>Mumbai</td>\n      <td>Working Professional</td>\n      <td>Teacher</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>Less than 5 hours</td>\n      <td>Moderate</td>\n      <td>BBA</td>\n      <td>Yes</td>\n      <td>10.0</td>\n      <td>1.0</td>\n      <td>Yes</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>Rhea</td>\n      <td>Female</td>\n      <td>30.0</td>\n      <td>Kanpur</td>\n      <td>Working Professional</td>\n      <td>Business Analyst</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>5-6 hours</td>\n      <td>Unhealthy</td>\n      <td>BBA</td>\n      <td>Yes</td>\n      <td>9.0</td>\n      <td>4.0</td>\n      <td>Yes</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"test_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:40.995650Z","iopub.execute_input":"2024-11-06T14:34:40.996141Z","iopub.status.idle":"2024-11-06T14:34:41.044945Z","shell.execute_reply.started":"2024-11-06T14:34:40.996096Z","shell.execute_reply":"2024-11-06T14:34:41.043507Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"           id     Name  Gender   Age           City  \\\n0      140700   Shivam    Male  53.0  Visakhapatnam   \n1      140701    Sanya  Female  58.0        Kolkata   \n2      140702     Yash    Male  53.0         Jaipur   \n3      140703   Nalini  Female  23.0         Rajkot   \n4      140704  Shaurya    Male  47.0         Kalyan   \n...       ...      ...     ...   ...            ...   \n93795  234495     Zoya  Female  49.0         Jaipur   \n93796  234496    Shlok    Male  29.0      Ahmedabad   \n93797  234497    Rishi    Male  24.0  Visakhapatnam   \n93798  234498   Eshita  Female  23.0         Kalyan   \n93799  234499    Gauri  Female  43.0       Varanasi   \n\n      Working Professional or Student              Profession  \\\n0                Working Professional                   Judge   \n1                Working Professional  Educational Consultant   \n2                Working Professional                 Teacher   \n3                             Student                     NaN   \n4                Working Professional                 Teacher   \n...                               ...                     ...   \n93795            Working Professional                   Pilot   \n93796            Working Professional                   Pilot   \n93797                         Student                     NaN   \n93798            Working Professional       Marketing Manager   \n93799            Working Professional  Educational Consultant   \n\n       Academic Pressure  Work Pressure  CGPA  Study Satisfaction  \\\n0                    NaN            2.0   NaN                 NaN   \n1                    NaN            2.0   NaN                 NaN   \n2                    NaN            4.0   NaN                 NaN   \n3                    5.0            NaN  6.84                 1.0   \n4                    NaN            5.0   NaN                 NaN   \n...                  ...            ...   ...                 ...   \n93795                NaN            3.0   NaN                 NaN   \n93796                NaN            5.0   NaN                 NaN   \n93797                1.0            NaN  7.51                 4.0   \n93798                NaN            4.0   NaN                 NaN   \n93799                NaN            5.0   NaN                 NaN   \n\n       Job Satisfaction     Sleep Duration Dietary Habits  Degree  \\\n0                   5.0  Less than 5 hours       Moderate     LLB   \n1                   4.0  Less than 5 hours       Moderate    B.Ed   \n2                   1.0          7-8 hours       Moderate  B.Arch   \n3                   NaN  More than 8 hours       Moderate     BSc   \n4                   5.0          7-8 hours       Moderate     BCA   \n...                 ...                ...            ...     ...   \n93795               5.0  Less than 5 hours       Moderate     BSc   \n93796               1.0          7-8 hours       Moderate      BE   \n93797               NaN          7-8 hours       Moderate  B.Tech   \n93798               2.0          5-6 hours        Healthy      BA   \n93799               2.0  More than 8 hours        Healthy    B.Ed   \n\n      Have you ever had suicidal thoughts ?  Work/Study Hours  \\\n0                                        No               9.0   \n1                                        No               6.0   \n2                                       Yes              12.0   \n3                                       Yes              10.0   \n4                                       Yes               3.0   \n...                                     ...               ...   \n93795                                   Yes               2.0   \n93796                                   Yes              11.0   \n93797                                    No               7.0   \n93798                                   Yes               7.0   \n93799                                    No              11.0   \n\n       Financial Stress Family History of Mental Illness  \n0                   3.0                              Yes  \n1                   4.0                               No  \n2                   4.0                               No  \n3                   4.0                               No  \n4                   4.0                               No  \n...                 ...                              ...  \n93795               2.0                              Yes  \n93796               3.0                              Yes  \n93797               1.0                               No  \n93798               5.0                              Yes  \n93799               2.0                               No  \n\n[93800 rows x 19 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Name</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>City</th>\n      <th>Working Professional or Student</th>\n      <th>Profession</th>\n      <th>Academic Pressure</th>\n      <th>Work Pressure</th>\n      <th>CGPA</th>\n      <th>Study Satisfaction</th>\n      <th>Job Satisfaction</th>\n      <th>Sleep Duration</th>\n      <th>Dietary Habits</th>\n      <th>Degree</th>\n      <th>Have you ever had suicidal thoughts ?</th>\n      <th>Work/Study Hours</th>\n      <th>Financial Stress</th>\n      <th>Family History of Mental Illness</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>140700</td>\n      <td>Shivam</td>\n      <td>Male</td>\n      <td>53.0</td>\n      <td>Visakhapatnam</td>\n      <td>Working Professional</td>\n      <td>Judge</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>Less than 5 hours</td>\n      <td>Moderate</td>\n      <td>LLB</td>\n      <td>No</td>\n      <td>9.0</td>\n      <td>3.0</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>140701</td>\n      <td>Sanya</td>\n      <td>Female</td>\n      <td>58.0</td>\n      <td>Kolkata</td>\n      <td>Working Professional</td>\n      <td>Educational Consultant</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>Less than 5 hours</td>\n      <td>Moderate</td>\n      <td>B.Ed</td>\n      <td>No</td>\n      <td>6.0</td>\n      <td>4.0</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>140702</td>\n      <td>Yash</td>\n      <td>Male</td>\n      <td>53.0</td>\n      <td>Jaipur</td>\n      <td>Working Professional</td>\n      <td>Teacher</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>7-8 hours</td>\n      <td>Moderate</td>\n      <td>B.Arch</td>\n      <td>Yes</td>\n      <td>12.0</td>\n      <td>4.0</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>140703</td>\n      <td>Nalini</td>\n      <td>Female</td>\n      <td>23.0</td>\n      <td>Rajkot</td>\n      <td>Student</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>6.84</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>More than 8 hours</td>\n      <td>Moderate</td>\n      <td>BSc</td>\n      <td>Yes</td>\n      <td>10.0</td>\n      <td>4.0</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>140704</td>\n      <td>Shaurya</td>\n      <td>Male</td>\n      <td>47.0</td>\n      <td>Kalyan</td>\n      <td>Working Professional</td>\n      <td>Teacher</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>7-8 hours</td>\n      <td>Moderate</td>\n      <td>BCA</td>\n      <td>Yes</td>\n      <td>3.0</td>\n      <td>4.0</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>93795</th>\n      <td>234495</td>\n      <td>Zoya</td>\n      <td>Female</td>\n      <td>49.0</td>\n      <td>Jaipur</td>\n      <td>Working Professional</td>\n      <td>Pilot</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>Less than 5 hours</td>\n      <td>Moderate</td>\n      <td>BSc</td>\n      <td>Yes</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>93796</th>\n      <td>234496</td>\n      <td>Shlok</td>\n      <td>Male</td>\n      <td>29.0</td>\n      <td>Ahmedabad</td>\n      <td>Working Professional</td>\n      <td>Pilot</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>7-8 hours</td>\n      <td>Moderate</td>\n      <td>BE</td>\n      <td>Yes</td>\n      <td>11.0</td>\n      <td>3.0</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>93797</th>\n      <td>234497</td>\n      <td>Rishi</td>\n      <td>Male</td>\n      <td>24.0</td>\n      <td>Visakhapatnam</td>\n      <td>Student</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>7.51</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>7-8 hours</td>\n      <td>Moderate</td>\n      <td>B.Tech</td>\n      <td>No</td>\n      <td>7.0</td>\n      <td>1.0</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>93798</th>\n      <td>234498</td>\n      <td>Eshita</td>\n      <td>Female</td>\n      <td>23.0</td>\n      <td>Kalyan</td>\n      <td>Working Professional</td>\n      <td>Marketing Manager</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>5-6 hours</td>\n      <td>Healthy</td>\n      <td>BA</td>\n      <td>Yes</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>93799</th>\n      <td>234499</td>\n      <td>Gauri</td>\n      <td>Female</td>\n      <td>43.0</td>\n      <td>Varanasi</td>\n      <td>Working Professional</td>\n      <td>Educational Consultant</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>More than 8 hours</td>\n      <td>Healthy</td>\n      <td>B.Ed</td>\n      <td>No</td>\n      <td>11.0</td>\n      <td>2.0</td>\n      <td>No</td>\n    </tr>\n  </tbody>\n</table>\n<p>93800 rows × 19 columns</p>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"markdown","source":"## 3. Data Exploration and Preprocessing","metadata":{}},{"cell_type":"markdown","source":"### Handle Missing Values","metadata":{}},{"cell_type":"code","source":"# Check for missing values\nprint(train_df.isnull().sum())\n\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:41.046925Z","iopub.execute_input":"2024-11-06T14:34:41.047484Z","iopub.status.idle":"2024-11-06T14:34:41.218172Z","shell.execute_reply.started":"2024-11-06T14:34:41.047436Z","shell.execute_reply":"2024-11-06T14:34:41.216826Z"}},"outputs":[{"name":"stdout","text":"id                                            0\nName                                          0\nGender                                        0\nAge                                           0\nCity                                          0\nWorking Professional or Student               0\nProfession                                36630\nAcademic Pressure                        112803\nWork Pressure                             27918\nCGPA                                     112802\nStudy Satisfaction                       112803\nJob Satisfaction                          27910\nSleep Duration                                0\nDietary Habits                                4\nDegree                                        2\nHave you ever had suicidal thoughts ?         0\nWork/Study Hours                              0\nFinancial Stress                              4\nFamily History of Mental Illness              0\nDepression                                    0\ndtype: int64\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"#checking for missing values in percentage\nprint(train_df.isnull().sum()*100/len(train_df))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:41.220088Z","iopub.execute_input":"2024-11-06T14:34:41.220672Z","iopub.status.idle":"2024-11-06T14:34:41.384865Z","shell.execute_reply.started":"2024-11-06T14:34:41.220615Z","shell.execute_reply":"2024-11-06T14:34:41.383099Z"}},"outputs":[{"name":"stdout","text":"id                                        0.000000\nName                                      0.000000\nGender                                    0.000000\nAge                                       0.000000\nCity                                      0.000000\nWorking Professional or Student           0.000000\nProfession                               26.034115\nAcademic Pressure                        80.172708\nWork Pressure                            19.842217\nCGPA                                     80.171997\nStudy Satisfaction                       80.172708\nJob Satisfaction                         19.836532\nSleep Duration                            0.000000\nDietary Habits                            0.002843\nDegree                                    0.001421\nHave you ever had suicidal thoughts ?     0.000000\nWork/Study Hours                          0.000000\nFinancial Stress                          0.002843\nFamily History of Mental Illness          0.000000\nDepression                                0.000000\ndtype: float64\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"# Check for missing values\nprint(train_df.isnull().sum())\n\n# Fill missing values with mean/mode as appropriate\nfor col in train_df.columns:\n    if train_df[col].dtype == 'object':\n        train_df[col].fillna(train_df[col].mode()[0], inplace=True)\n    else:\n        train_df[col].fillna(train_df[col].mean(), inplace=True)\n\n# Apply the same transformations to the test set\n# for col in test_df.columns:\n#     if test_df[col].dtype == 'object':\n#         test_df[col].fillna(test_df[col].mode()[0], inplace=True)\n#     else:\n#         test_df[col].fillna(test_df[col].mean(), inplace=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:41.386628Z","iopub.execute_input":"2024-11-06T14:34:41.387232Z","iopub.status.idle":"2024-11-06T14:34:42.045001Z","shell.execute_reply.started":"2024-11-06T14:34:41.387178Z","shell.execute_reply":"2024-11-06T14:34:42.043676Z"}},"outputs":[{"name":"stdout","text":"id                                            0\nName                                          0\nGender                                        0\nAge                                           0\nCity                                          0\nWorking Professional or Student               0\nProfession                                36630\nAcademic Pressure                        112803\nWork Pressure                             27918\nCGPA                                     112802\nStudy Satisfaction                       112803\nJob Satisfaction                          27910\nSleep Duration                                0\nDietary Habits                                4\nDegree                                        2\nHave you ever had suicidal thoughts ?         0\nWork/Study Hours                              0\nFinancial Stress                              4\nFamily History of Mental Illness              0\nDepression                                    0\ndtype: int64\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_30/2094911044.py:9: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df[col].fillna(train_df[col].mean(), inplace=True)\n/tmp/ipykernel_30/2094911044.py:7: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train_df[col].fillna(train_df[col].mode()[0], inplace=True)\n","output_type":"stream"}],"execution_count":7},{"cell_type":"markdown","source":"### Encode Categorical Variables","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\n# Create a copy of both datasets combined, just for fitting the encoder\ncombined_df = pd.concat([train_df, test_df], axis=0)\n\n# Encode categorical columns\nlabel_enc = LabelEncoder()\nfor col in train_df.select_dtypes(include='object').columns:\n    # Fit on combined data to handle all unique categories\n    label_enc.fit(combined_df[col])\n    \n    # Transform both train and test sets\n    train_df[col] = label_enc.transform(train_df[col])\n    #test_df[col] = label_enc.transform(test_df[col])\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.046829Z","iopub.execute_input":"2024-11-06T14:34:42.047280Z","iopub.status.idle":"2024-11-06T14:34:42.591698Z","shell.execute_reply.started":"2024-11-06T14:34:42.047236Z","shell.execute_reply":"2024-11-06T14:34:42.590350Z"}},"outputs":[],"execution_count":8},{"cell_type":"markdown","source":"### Feature Scaling","metadata":{}},{"cell_type":"code","source":"# Scale numerical features\nscaler = StandardScaler()\n\nnum_cols = train_df.select_dtypes(include=['int64', 'float64']).columns\ntrain_df[num_cols] = scaler.fit_transform(train_df[num_cols])\n#test_df[num_cols] = scaler.transform(test_df[num_cols])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.593561Z","iopub.execute_input":"2024-11-06T14:34:42.594011Z","iopub.status.idle":"2024-11-06T14:34:42.720876Z","shell.execute_reply.started":"2024-11-06T14:34:42.593937Z","shell.execute_reply":"2024-11-06T14:34:42.719615Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"## 4. Split Data for Model Training","metadata":{}},{"cell_type":"code","source":"# Separate features and target\nX = train_df.drop(['id', 'Depression'], axis=1)\ny = train_df['Depression']\n\n# Split data into training and validation sets\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.722359Z","iopub.execute_input":"2024-11-06T14:34:42.722914Z","iopub.status.idle":"2024-11-06T14:34:42.819840Z","shell.execute_reply.started":"2024-11-06T14:34:42.722860Z","shell.execute_reply":"2024-11-06T14:34:42.818482Z"}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"## 5. Train a Baseline Model","metadata":{}},{"cell_type":"code","source":"# Check the unique values in the 'Depression' column\nprint(\"Unique values in 'Depression':\", train_df['Depression'].unique())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.821369Z","iopub.execute_input":"2024-11-06T14:34:42.821801Z","iopub.status.idle":"2024-11-06T14:34:42.832482Z","shell.execute_reply.started":"2024-11-06T14:34:42.821756Z","shell.execute_reply":"2024-11-06T14:34:42.830768Z"}},"outputs":[{"name":"stdout","text":"Unique values in 'Depression': [-0.47123764  2.12207156]\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"# Convert 'Depression' to an integer type if necessary\nif train_df['Depression'].dtype not in ['int64', 'int32']:\n    train_df['Depression'] = train_df['Depression'].astype(int)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.837458Z","iopub.execute_input":"2024-11-06T14:34:42.838035Z","iopub.status.idle":"2024-11-06T14:34:42.848486Z","shell.execute_reply.started":"2024-11-06T14:34:42.837989Z","shell.execute_reply":"2024-11-06T14:34:42.846794Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"print(\"Data type of 'Depression':\", train_df['Depression'].dtype)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.850078Z","iopub.execute_input":"2024-11-06T14:34:42.850627Z","iopub.status.idle":"2024-11-06T14:34:42.861820Z","shell.execute_reply.started":"2024-11-06T14:34:42.850569Z","shell.execute_reply":"2024-11-06T14:34:42.859881Z"}},"outputs":[{"name":"stdout","text":"Data type of 'Depression': int64\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"# Define features and target variable\nX = train_df.drop(['id', 'Depression'], axis=1)\ny = train_df['Depression']\n\n# Split data for training and validation\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a Random Forest Classifier\nfrom sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(random_state=42)\nmodel.fit(X_train, y_train)\n\n# Evaluate model on validation data\nfrom sklearn.metrics import accuracy_score\ny_pred = model.predict(X_val)\naccuracy = accuracy_score(y_val, y_pred)\nprint(f'Validation Accuracy: {accuracy:.2f}')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:34:42.863879Z","iopub.execute_input":"2024-11-06T14:34:42.864477Z","iopub.status.idle":"2024-11-06T14:35:06.242306Z","shell.execute_reply.started":"2024-11-06T14:34:42.864419Z","shell.execute_reply":"2024-11-06T14:35:06.240578Z"}},"outputs":[{"name":"stdout","text":"Validation Accuracy: 0.94\n","output_type":"stream"}],"execution_count":14},{"cell_type":"markdown","source":"## 6. Hyperparameter Tuning","metadata":{}},{"cell_type":"code","source":"# Hyperparameter tuning with GridSearchCV\nparam_grid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [5, 10, None],\n    'min_samples_split': [2, 5, 10]\n}\n\ngrid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\ngrid_search.fit(X, y)\n\n# Best parameters and score\nprint(\"Best Parameters:\", grid_search.best_params_)\nprint(\"Best Accuracy Score:\", grid_search.best_score_)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:35:18.098996Z","iopub.execute_input":"2024-11-06T14:35:18.099538Z","iopub.status.idle":"2024-11-06T14:35:18.143941Z","shell.execute_reply.started":"2024-11-06T14:35:18.099491Z","shell.execute_reply":"2024-11-06T14:35:18.141929Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[16], line 8\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# Hyperparameter tuning with GridSearchCV\u001b[39;00m\n\u001b[1;32m      2\u001b[0m param_grid \u001b[38;5;241m=\u001b[39m {\n\u001b[1;32m      3\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mn_estimators\u001b[39m\u001b[38;5;124m'\u001b[39m: [\u001b[38;5;241m100\u001b[39m, \u001b[38;5;241m200\u001b[39m, \u001b[38;5;241m300\u001b[39m],\n\u001b[1;32m      4\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmax_depth\u001b[39m\u001b[38;5;124m'\u001b[39m: [\u001b[38;5;241m5\u001b[39m, \u001b[38;5;241m10\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m],\n\u001b[1;32m      5\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmin_samples_split\u001b[39m\u001b[38;5;124m'\u001b[39m: [\u001b[38;5;241m2\u001b[39m, \u001b[38;5;241m5\u001b[39m, \u001b[38;5;241m10\u001b[39m]\n\u001b[1;32m      6\u001b[0m }\n\u001b[0;32m----> 8\u001b[0m grid_search \u001b[38;5;241m=\u001b[39m GridSearchCV(\u001b[43mrf_model\u001b[49m, param_grid, cv\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m5\u001b[39m, scoring\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maccuracy\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m      9\u001b[0m grid_search\u001b[38;5;241m.\u001b[39mfit(X, y)\n\u001b[1;32m     11\u001b[0m \u001b[38;5;66;03m# Best parameters and score\u001b[39;00m\n","\u001b[0;31mNameError\u001b[0m: name 'rf_model' is not defined"],"ename":"NameError","evalue":"name 'rf_model' is not defined","output_type":"error"}],"execution_count":16},{"cell_type":"markdown","source":"## 7. Final Model and Prediction on Test Set","metadata":{}},{"cell_type":"code","source":"# Train the model with the best parameters on the entire dataset\nfinal_model = RandomForestClassifier(**grid_search.best_params_)\nfinal_model.fit(X, y)\n\n# Predict on the test set\ntest_predictions = final_model.predict(test_df.drop(['id'], axis=1))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-06T14:35:06.793886Z","iopub.status.idle":"2024-11-06T14:35:06.794363Z","shell.execute_reply.started":"2024-11-06T14:35:06.794137Z","shell.execute_reply":"2024-11-06T14:35:06.794161Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## 8. Prepare Submission File","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}